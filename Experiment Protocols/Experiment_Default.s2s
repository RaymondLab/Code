'--------------------------------------------------------------------------------
' Rig-Specific parameters file Location
'--------------------------------------------------------------------------------
'D019
'#include "C:\\Users\\Public\\RaymondLabCode\\Experiment Protocols\\Parameters_D019.s2s"

'D253
'#include "C:\\Users\\Public\\RaymondLabCode\\Experiment Protocols\\Parameters_D253.s2s"

'--------------------------------------------------------------------------------
' Universal Parameters File Location
'--------------------------------------------------------------------------------
#include "C:\\Users\\Public\\RaymondLabCode\\Experiment Protocols\\Parameters_Universal.s2s"


'--------------------------------------------------------------------------------
' MAIN PROGRAM
'--------------------------------------------------------------------------------
ToolbarConfig();


'--------------------------------------------------------------------------------
' Toolbar Callbacks
'--------------------------------------------------------------------------------
Func ToolbarIdle%()
  'This function calls repeatedly whenever nothing else is happening
  'if runExmpt=1, it is used to run a full expmt automatically.  -HP
  'expmtMode: 0=habit, 1=0x, 2=2x, 3=ipsi stim, 4=contra stim
  'test: 0=wait, 1=test, 2=train

      ' Check a valid sampling view is running
      var currView := ViewKind();
      if  currView <> 0 then
          return 1;
      endif;

  ' Keep sine wave from drifting
  if MaxTime() > (prevTime + 1/sinHzChair) then
  if driftFix = 1 then
      driftFix%();
    endif;
  endif;


  'If an experiment is running:
  if runExpmt% = 1 then

      'Check the time. Seconds is the current time - compare it to the goal time of each segment
      if  MaxTime() > goalTime then

          docase

          ' GAP A
          case test% = 0 then
              SampleKey("0");
            SampleKey("x");
            goalTime := MaxTime() + 5;
              ToolbarInit%(); Yield();
            test% := 7;

          ' GAP B
          case test% = 7 then
            SampleKey("7");
            goalTime := MaxTime() + 5;
            ToolbarInit%(); Yield();


            ' Go to Pre/Post or Train/Test Section
            docase
              ' PRE & POST Tests
              case expmtLoc% = 1 then
                test% := 1;
              ' TEST/TRAIN Blocks
              case expmtLoc% = 2 then
                test% := 2;
                ' If you have already done the test/train blocks, quit instead.
                if rep% = (nBlocks%+1)  then
                  ToolbarQuitExpmt%();
                  Return(1);
              endif
            endcase
            runFlash(); Yield();
            ToolbarInit%(); Yield();

          ' PRE AND POST TEST
          case test% = 1 then
            SampleKey("1");
            SampleKey("X");
            goalTime := MaxTime() + testLength;
            test% := 0;

            ' Keep track of how many PRE/POST tests that you've run
            prePostNum := prePostNum + 1;

            if prePostNum > 2 then
              expmtLoc% := 2;
              ' This check is for the 'T-35' test
              if rep% < nBlocks% then
              prePostNum := 1;
              endif
            else
              expmtLoc% := 1;
            endif

            if expmtMode = 5 then
              ToolbarStepOn%();
            else
              ToolbarSineStart%();
            endif;

          ' BLOCK: TEST
          case test% = 2 then
              SampleKey("2");
            SampleKey("X");
              goalTime := MaxTime() + testLength;

              testrep% := testrep% + 1;

              if testrep% = nTestreps% then
                  test% := 3;
                  rep% := rep% + 1;
              else
              test% := 0;
            endif;

            ' Start correct Stim, STEP or SINE
            if expmtMode = 5 then
              ToolbarStepOn%();
            else
              ToolbarSineStart%();
              endif;

          ' BLOCK: TRAIN
          case test% = 3 then
              SampleKey("3");
            SampleKey("x");
            SampleKey("X");
              goalTime := MaxTime() + runLength;

              if rep% < (nBlocks%+1) then
                  docase
                '3 = ipsi, 4 = contra
                case expmtMode = 3 or expmtMode = 4 then
                      ToolbarStimOn%();
                '1 = x0, 2 = x2
                case expmtMode = 1 or expmtMode = 2 then
                      ToolbarLightOn%();
                '5 = step
                case expmtMode = 5 then
                    ToolbarStepOff%(); Yield();
                    ToolbarLightOn%(); Yield();
                    ToolbarStepOn%();
                  endcase;
              else
                  ToolbarSineStop%();
              ToolbarStepOff%();
              expmtLoc% := 1;
              endif;

              if rep% = nBlocks% then
              expmtLoc% := 1;
            endif

                  test% := 0;
              testrep% := 0;

          endcase;
      endif;
  endif;
  Return(1);
End

'--------------------------------------------------------------------------------
'Configure expmt settings window
'--------------------------------------------------------------------------------
Func ToolbarConfigExpmt%()
  DlgCreate("Experiment settings");  'Start new dialog
  DlgInteger(1,"Number of run-test blocks",0,100,0,0,1);
  DlgInteger(2,"Number of tests per block",1,100,0,0,1);    'set to 0 if not using Chair
  DlgReal(3,"Run length (s)",0,5000);
  DlgReal(4,"Test length (s)",0,5000);
  DlgList(5,"Expmt mode", "habit|x0|x2|ipsi|contra|steps");
  DlgInteger(6,"Light flash on?)",0,1,0,0,"0|1");
  DlgReal(7,"Test stim and bilat (0 or 1)",0,1);

  DlgShow(nBlocks%, nTestreps%, runLength, testLength, expmtMode, flashon%,testStim);

  docase
  case expmtMode = 0 then     'habit
      sinPhDrum := 90;
      sinPhChair := 90;
      sinAmpChair := 10;
      sinAmpDrum := 0;
  case expmtMode = 1 then     'x0
      sinPhDrum := 90;
      sinPhChair := 90;
      sinAmpChair := 10;
      sinAmpDrum := 10;
  case expmtMode = 2 then     'x2
      sinPhDrum := -90;
      sinPhChair := 90;
      sinAmpChair := 10;
      sinAmpDrum := 10;
  case expmtMode = 3  then     'ipsi
      sinPhChair := 90;
      sinAmpDrum := 0;
  case expmtMode = 4 then      'contra
      sinPhChair := -90;
      sinAmpDrum := 0;
  case expmtMode = 5 then      'steps
      StepConfigWindow%();
  endcase;


  if testStim > 0 then
      ToolbarPulseConfig%()
  endif;

  SetSequencerValues();
  Return(1);
End
