'--------------------------------------------------------------------------------
' Rig-Specific parameters file Location
'--------------------------------------------------------------------------------
'D019
#include "C:\\Users\\Raymond Lab\\Documents\\Code\\Experiment Protocols\\Parameters_D019.s2s"

'D253
'#include "C:\\Users\\amins\\Documents\\RL_Code\\Experiment Protocols\\Parameters_D253.s2s"

'--------------------------------------------------------------------------------
' Universal Parameters File Location
'--------------------------------------------------------------------------------
#include "C:\\Users\\Raymond Lab\\Documents\\Code\\Experiment Protocols\\Parameters_Universal.s2s"

'--------------------------------------------------------------------------------
' MISC PARAMETERS
'--------------------------------------------------------------------------------
nBlocks% := 60;
testLength := 50;
runLength := 50;

'--------------------------------------------------------------------------------
' MAIN PROGRAM
'--------------------------------------------------------------------------------
ToolbarConfig();


'--------------------------------------------------------------------------------
' Toolbar Callbacks
'--------------------------------------------------------------------------------
Func ToolbarIdle%()
  'This function calls repeatedly whenever nothing else is happening
  'if runExmpt=1, it is used to run a full expmt automatically.  -HP
  'expmtMode: 0=habit, 1=0x, 2=2x, 3=ipsi stim, 4=contra stim
  'test: 0=wait, 1=test, 2=train

  ' Check a valid sampling view is running
  var currView := ViewKind();
  if  currView <> 0 then
      return 1;
  endif;

  ' Keep sine wave from drifting!!!
  if MaxTime() > (prevTime + 1/sinHzChair) then
  if driftFix = 1 then
      driftFix%();
    endif;
  endif;



'If an experiment is running:
if runExpmt% = 1 then

    'Check the time. Seconds is the current time - compare it to the goal time of each segment
    if  MaxTime() > goalTime then

      docase

        ' MISC GAP A
        case test% = 0 then
            SampleKey("0");
            goalTime := MaxTime() + 5;
            SampleKey("x");
            ToolbarSineStop%(); Yield();
            ToolbarLightOff%(); Yield();
            ToolbarInit%(); Yield();

            if prePostNum = 3 then
              ToolbarQuitExpmt%();
              Return(1);
            endif

            test% := 7;

        ' MISC GAP B
        case test% = 7 then
              SampleKey("7");
              goalTime := MaxTime() + 5;
              runFlash();
              test% := 4;

        ' MISC TEST
        case test% = 4 then
            SampleKey("4");
            goalTime := MaxTime() + testLength;

            sinAmpChair := 10;
            SetSequencerValues(); Yield();

            docase
              case prePostNum = 1 then
                prePostNum := prePostNum + 1;
                test% := 1;
              case prePostNum = 2 then
                prePostNum := prePostNum + 1;
                test% := 0;
            endcase
            SampleKey("X");
            ToolbarSineStart%(); Yield();

        ' BLOCK: GAP A
        case test% = 1 then
            SampleKey("1");
            goalTime := MaxTime() + 5;
            SampleKey("x");
            ToolbarSineStop%(); Yield();
            ToolbarLightOff%(); Yield();
            ToolbarInit%(); Yield();
            test% := 6;

        ' BLOCK: GAP B
        case test% = 6 then
            SampleKey("6");
            goalTime := MaxTime() + 5;
            runFlash();
            test% := 3;

        ' BLOCK: TRAIN
        case test% = 3 then
            SampleKey("3");
            goalTime := MaxTime() + runLength;

            if sinAmpChair <> 0 then
              sinAmpChair := 0;
              SetSequencerValues();
            endif;

            rep% := rep% + 1;
            if rep% = nBlocks% then
                test% := 0;
            else
                test% := 1;
            endif;
            SampleKey("X");
            ToolbarLightOn%(); Yield();
            ToolbarSineStart%();




      endcase;
    endif;
endif;
Return(1);
End


'--------------------------------------------------------------------------------
'Configure expmt settings window
'--------------------------------------------------------------------------------
Func ToolbarConfigExpmt%()
  DlgCreate("Experiment settings");  'Start new dialog
  DlgInteger(1,"Number of run-test blocks",0,100,0,0,1);
  DlgInteger(2,"Number of tests per block",1,100,0,0,1);    'set to 0 if not using Chair
  DlgReal(3,"Run length (s)",0,5000);
  DlgReal(4,"Test length (s)",0,5000);
  DlgList(5,"Expmt mode", "habit|x0|x2|ipsi|contra|steps");
  DlgInteger(6,"Light flash on?)",0,1,0,0,"0|1");
  DlgReal(7,"Test stim and bilat (0 or 1)",0,1);

  DlgShow(nBlocks%, nTestreps%, runLength, testLength, expmtMode, flashon%,testStim);

  docase
  case expmtMode = 0 then     'habit
      sinPhDrum := 90;
      sinPhChair := 90;
      sinAmpChair := 10;
      sinAmpDrum := 0;
  case expmtMode = 1 then     'x0
      sinPhDrum := 90;
      sinPhChair := 90;
      sinAmpChair := 10;
      sinAmpDrum := 10;
  case expmtMode = 2 then     'x2
      sinPhDrum := -90;
      sinPhChair := 90;
      sinAmpChair := 10;
      sinAmpDrum := 10;
  case expmtMode = 3  then     'ipsi
      sinPhChair := -90;
      sinAmpDrum := 0;
  case expmtMode = 4 then      'contra
      sinPhChair := 90;
      sinAmpDrum := 0;
  case expmtMode = 5 then      'steps
      ToolbarStepConfig%();
  endcase;


  if testStim > 0 then
      ToolbarPulseConfig%()
  endif;

  SetSequencerValues();
  Return(1);
End
